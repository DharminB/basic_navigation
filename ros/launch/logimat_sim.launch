<?xml version="1.0"?>
<launch>
    <!-- MAP PARAMS -->
    <arg name="map_file" default="$(find ropod_navigation_test)/../occupancy_grids/logimat/exhibition-hall/map.yaml" />
    <!-- offset between gazebo world origin and map origin -->
    <arg name="init_x" default="-3.0" />
    <arg name="init_y" default="3.0" />
    <arg name="init_theta" default="0.0" />
    <arg name="robot_id" default="load" />
    <arg name="map_offset_x" default="-0.8" />
    <arg name="map_offset_y" default="-0.95" />
    <arg name="map_offset_theta" default="0.3" />
    <arg name="model" default="ropod"/>
    <arg name="model_path" default="$(find ropod_description)/xacro/$(arg model).xacro"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="start_rviz" default="true"/>

    <arg name="world_model_name" default="logimat_exhibition_hall"/>
    <arg name="world_model" default="$(find basic_navigation)/ros/config/$(arg world_model_name).xacro"/>

    <!-- Load the world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    </include>

    <param name="world_description" command="xacro --inorder $(arg world_model)" />

    <!-- spawn uploaded world model -->
    <node pkg="gazebo_ros" type="spawn_model" name="gazebo_world_model" respawn="false" output="screen"
          args="-urdf -param world_description -model world -x 0.0 -y 0.0 -z 0.0" />

    <!-- Load the robot description from the urdf model -->
	<group ns="$(arg robot_id)">
        <param name="tf_prefix" value="$(arg robot_id)" />
        <param name="robot_description" command="rosrun xacro xacro --inorder '$(arg model_path)' namespace:=$(arg robot_id)" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
            <param name="rate" value="10"/>
        </node>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />

        <!-- Spawn the robot using the arguments and robot description -->
        <node name="spawn_urdf_model" pkg="gazebo_ros" type="spawn_model"
            args="-param robot_description -urdf -model ropod
                  -x $(arg init_x) -y $(arg init_y) -z 0.0 -Y $(arg init_theta) " />
	</group>

    <include file="$(find basic_navigation)/ros/launch/amcl.launch">
        <arg name="robot_id" value="$(arg robot_id)"/>
        <arg name="initial_pose_x" value="$(eval arg('init_x') + arg('map_offset_x'))" />
        <arg name="initial_pose_y" value="$(eval arg('init_y') + arg('map_offset_y'))" />
        <arg name="initial_pose_a" value="$(eval arg('init_theta') + arg('map_offset_theta'))" />
    </include>

    <node pkg="ropod_gazebo" name="odom_tf_pub" type="ros_frame_pub" respawn="true" output="screen" />

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <group if="$(arg start_rviz)">
        <!-- rviz for visualisation -->
        <node pkg="rviz" type="rviz" name="rviz" args="-d $(find basic_navigation)/ros/config/basic_navigation.rviz" />
    </group>

</launch>
